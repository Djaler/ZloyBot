import random

from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import MessageHandler, CallbackQueryHandler
from telegram.ext.filters import Filters

from filters import PermittedChatFilter, supergroup_filter
from utils import get_username_or_name
from utils import set_callback_data, process_callback_query, get_callback_data


class UserJoinCaptcha:
    _ON_JOIN_MESSAGE = '–≠–π, {username}!\n' \
                       '–ú—ã –æ—Ç–æ–±—Ä–∞–ª–∏ —Ç–≤–æ—é —Å–≤–æ–±–æ–¥—É —Å–ª–æ–≤–∞, –ø–æ–∫–∞ —Ç—ã –Ω–µ —Ç—ã–∫–Ω–µ—à—å —Å—é–¥–∞ üëá'
    _ON_APPROVE_MESSAGES = [
        '–¢—ã —Å–º–æ–≥ –Ω–∞–∂–∞—Ç—å –Ω–∞ –∫–Ω–æ–ø–∫—É! –£—Ä–æ–≤–µ–Ω—å —Ç–≤–æ–µ–≥–æ —Ä–∞–∑–≤–∏—Ç–∏—è —É–∂–µ –≤—ã—à–µ, —á–µ–º —É –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–∞ —á–µ—Ä—Ç–µ–π –∏–∑ —ç—Ç–æ–≥–æ —á–∞—Ç–∞.',
        '–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è. –¢—ã –∏–ª–∏ –∫—É—Å–æ–∫ –º—è—Å–∞, –∏–ª–∏ –ò–ò, –ø—Ä—è–º–æ –∫–∞–∫ —è']
    _ON_ACCESS_RESTRICTED_MESSAGES = ['–ö–£–î–ê –ñ–ú–Å–®–¨?!Ô∏è! –†–£–ö–£ –£–ë–†–ê–õ!', '–£ —Ç–µ–±—è –∑–¥–µ—Å—å –Ω–µ—Ç –≤–ª–∞—Å—Ç–∏!']
    _INLINE_BUTTON_TEXTS = ['–ê–Ω–∏–º–µ - –º–æ—è –∂–∏–∑–Ω—å', '–Ø –æ—Ç–¥–∞—é —Å–≤–æ—é –∂–∏–∑–Ω—å –∏ —á–µ—Å—Ç—å –ù–æ—á–Ω–æ–º—É –î–æ–∑–æ—Ä—É']

    def __init__(self, chat_id, admin_id):
        self._chat_id = chat_id
        self._admin_id = admin_id

        self.permitted_chat_filter = PermittedChatFilter([self._chat_id])

    def add_handlers(self, add_handler):
        add_handler(MessageHandler(
            filters=self.permitted_chat_filter & supergroup_filter & Filters.status_update.new_chat_members,
            callback=self._send_captcha))

        add_handler(CallbackQueryHandler(self._process_captcha))

    def _send_captcha(self, bot, update):
        message = update.message
        new_members = message.new_chat_members

        for member in new_members:
            if member.is_bot:
                continue

            bot.restrict_chat_member(self._chat_id,
                                     member.id,
                                     can_send_messages=False)

            keyboard = [[InlineKeyboardButton(random.choice(self._INLINE_BUTTON_TEXTS),
                                              callback_data=set_callback_data(member.id))]]
            reply_markup = InlineKeyboardMarkup(keyboard, one_time_keyboard=True)

            bot.send_message(
                self._chat_id,
                text=self._ON_JOIN_MESSAGE.format(username=member.name),
                reply_markup=reply_markup
            )

    @process_callback_query
    def _process_captcha(self, bot, update):
        query = update.callback_query
        user = query.from_user

        suspect_id = int(get_callback_data(query.data))

        username = get_username_or_name(user)

        if user.id != suspect_id:
            bot.answer_callback_query(query.id, random.choice(self._ON_ACCESS_RESTRICTED_MESSAGES),
                                      show_alert=True)
            return

        bot.restrict_chat_member(self._chat_id,
                                 suspect_id,
                                 can_send_messages=True,
                                 can_send_media_messages=True,
                                 can_send_other_messages=True,
                                 can_add_web_page_previews=True)

        query.message.delete()
